OSTYPE=lx
BUILDTYPE=p4080

UCMCONFIGSYNC=TRUE
GLU_PROD_DIR=p4080
CM_PROD_DIR = modules/system/p4080
MODSET_CM_OBJ_DIR = $(CM_DIR)/$(CM_PROD_DIR)/obj
MODSET_KERNOBJ_DIR = $(CM_DIR)/$(CM_PROD_DIR)/obj/kernobj

CM_PROJECT_PATH_FORANT = ../../../../../ucmcbk
OF_CP_SYS_DIR = $(OF_CP_MOD_DIR)/$(CP_PROD_DIR)

LINUX_OS_TYPE=ubuntu

include $(CM_DIR)/$(CM_PROD_DIR)/includes.mk
LKMSFORMAT = ko

#
# External Programs Used By The Project
#

TARGET_ENDIANESS=BSP_LITTLE_ENDIAN

#CROSS_PREFIX=powerpc-linux-gnu-
#ELFOPTS = elf_i386

CROSS_PREFIX=
ifeq ($(CPUARCH),POWERPC)
ifeq ($(TARGET_PLATFORM),MPC8548)
CROSS_PREFIX=powerpc-linux-gnuspe-
MPC8548_FLAGS = -DMPC8548_PLATFORM
MPC8548_FLAGS += -DMPC_QORIQ_PLATFORM
endif
ifeq ($(TARGET_PLATFORM),MPC8572)
CROSS_PREFIX=powerpc-none-linux-gnuspe-
MPC8572_FLAGS = -DMPC8572_PLATFORM
MPC8572_FLAGS += -DMPC_QORIQ_PLATFORM
endif
ifeq ($(TARGET_PLATFORM),P2020)
CROSS_PREFIX=powerpc-none-linux-gnuspe-
P2020_FLAGS = -DP2020_PLATFORM
P2020_FLAGS += -DMPC_QORIQ_PLATFORM
endif
ifeq ($(TARGET_PLATFORM),P4080)
CROSS_PREFIX=powerpc-linux-gnu-
P4080_FLAGS = -DP4080_PLATFORM
P4080_FLAGS += -DMPC_QORIQ_PLATFORM
BINFLAGS += -DIGWIHAPPIPPCAPABILITIES
endif
endif


CC     = $(CROSS_PREFIX)gcc
AR     = $(CROSS_PREFIX)ar -crv
LD     = $(CROSS_PREFIX)ld
RANLIB = $(CROSS_PREFIX)ranlib
GDB    =$(CROSS_PREFIX)-gdb
RM     = rm -f
STRIP  = $(CROSS_PREFIX)strip -R .note -R .comment

.PHONY: exe default all
exe: all
default: all

#### Directory definitions

MODSET_CM_OBJ_DIR=$(CM_DIR)/$(CM_PROD_DIR)/obj
MODSET_OBJ_DIR=$(CM_DIR)/$(CM_PROD_DIR)/obj
LINUX_SRC=/lib/modules/`uname -r`/build


#
# User Space Supports
#

CFLAGS += -Wformat -fno-stack-protector -Wunused -Wpointer-arith -Wmissing-prototypes -Wmissing-declarations -Wredundant-decls -Wstrict-prototypes
#-Wuninitialized 

CFLAGS +=  -DLINUX_SUPPORT=1
LDOPTS  = -r

#
# Supports. 
#

CFLAGS += -DCM_SUPPORT -DCM_DM_SUPPORT  -DCM_JE_SUPPORT -DCOMPILE_FOR_CM_ONLY
#CFLAGS += -DOF_CM_CP_CHANNEL_SUPPORT -DOF_CM_DP_CHANNEL_SUPPORT -DOF_UCMGLU_SUPPORT 
CFLAGS += -DOF_CM_CBKINI_SUPPORT -DOF_UCMGLU_SUPPORT 
CFLAGS += -DOF_UCMGLU_SUPPORT 
CFLAGS += -DCM_TRANSPORT_CHANNEL_SUPPORT
#-DCM_TRCHNL_TEST_SUPPORT
CFLAGS += -DCM_ROLES_PERM_SUPPORT -DCM_AUDIT_SUPPORT
CFLAGS += -DCM_VERSION_SUPPORT -DCM_EVENT_NOTIFMGR_SUPPORT 
CFLAGS += -DCM_AUTH_SUPPORT 
CFLAGS += -DOF_CM_AUTH_PLUGIN_SUPPORT
CFLAGS += -DOF_CM_HTTP_PLUGIN_SUPPORT
#CFLAGS += -DCM_JE_CHECK_MAX_TABLES

#-DCM_PAM_SUPPORT 
CFLAGS += -DCM_CLIENG_SUPPORT
CFLAGS += -DCM_LDSV_SUPPORT

ifeq ($(PRODUCT_TYPE),ITCM)
CFLAGS += -DOF_CM_ITCM_SUPPORT
endif
ifeq ($(UCMCONFIGSYNC),TRUE)
CFLAGS += -DCONFIGSYNC_SUPPORT
CFLAGS += -DCM_STATS_COLLECTOR_SUPPORT
endif

CFLAGS += -DCM_SECAPPL_DLL_SUPPORT
CFLAGS += -DOF_XML_SUPPORT
CFLAGS += -DOF_CM_SUPPORT -DOF_HTTPD_SUPPORT -DOF_HTTPS_SUPPORT -DHTTPS_ENABLE 
#CFLAGS += -DOPENSSL_9_7
CFLAGS += -DVORTIQA_SYSLOG_SUPPORT
#CFLAGS += -DCM_LOG_CLTR_SUPPORT -DCM_MESGCLNT_SUPPORT -DCM_SYSLOG_SCHEDULE

#
# Put only one of these OPTIM_FLAGS
#
OPTIM_FLAGS = -O2
#OPTIM_FLAGS += -g 

#OPTIM_FLAGS += -g -O

CFLAGS += $(OPTIM_FLAGS)

CFLAGS += $(INCLUDES)

#
# Kernel Space Flags
#

KERNEL_MAJOR_VERSION=2.6 
KERNEL_MINOR_VERSION=27 
KERNEL_PATH=/lib/modules/2.6.27.18-standard/build
KERNEL_SYMVERS = $(KERNEL_PATH)/Module.symvers
MODULE_SYMVERS = $(PWD)/Module.symvers
MODPOST = $(KERNEL_PATH)/scripts/mod/modpost
#KCFLAGS += -ffreestanding -Os -pipe -msoft-float -mregparm=3 -freg-struct-return -mpreferred-stack-boundary=2  -march=i686 -mtune=generic -mtune=generic -ffreestanding -maccumulate-outgoing-args -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -fno-stack-protector

LDOPTS  = -r -O2

ifeq ($(KERNEL_MAJOR_VERSION),2.6)
LDDRVFLAGS= -m elf_i386 -m elf_i386 -r
endif


ifeq ($(KERNEL_MAJOR_VERSION),2.6)
#KCFLAGS += -fno-strict-aliasing -fno-common -Wno-pointer-sign #-Werror
endif

#KCFLAGS += -Wall -Wuninitialized
#KCFLAGS += -D__KERNEL__ -DMODULE -DBSP_LITTLE_ENDIAN
#KCFLAGS +=  -DLINUX_SUPPORT=1

#KCFLAGS += -DCM_MESGCLNT_SUPPORT
#KCFLAGS +=$(KINCLUDES)
#KCFLAGS +=$(OPTIM_FLAGS)
