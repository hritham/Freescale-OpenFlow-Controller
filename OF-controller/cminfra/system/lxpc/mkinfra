# Copyright  2012, 2013  Freescale Semiconductor
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at:
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#     Unless required by applicable law or agreed to in writing, software
#     distributed under the License is distributed on an "AS IS" BASIS,
#     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#     See the License for the specific language governing permissions and
#     limitations under the License.

# File name: defs.system
# Author: Freescale Semiconductor    
# Date:   02/15/2013
# Description: Master make file to build UCM

include ../../../../ucmproject.path

UCM_DIR = $(UCM_PROJECT_PATH)/ucm
UCM_GLUE_PATH = $(UCM_PROJECT_PATH)/ucmglu/sputm

include rules.mod

include defs.system


ifeq ("$(BUILD_MSGSYS)", "yes")
all: makeucm makemgmt  makemsgsys makesys  $(CLI) $(HTTPD)  $(UCMLDSVD) $(TRCHNLD) $(UCMD) $(LOGCLTRLIB) $(MESGCLNTLIB) $(MESGCLNTD) $(LOGCLTRD) $(DRIVER)
else
all: makeucm makemgmt makesys  $(CLI) $(HTTPD)  $(UCMLDSVD) $(TRCHNLD) $(UCMD) $(LOGCLTRLIB) $(MESGCLNTLIB) 
endif

http: $(HTTPD)

driver: $(DRIVER)
	
#all: makedmtool makeglenv makeaplcmp makeucm makemgmt makemsgsys makesys  $(CLI) $(HTTPD) $(LOGCLTRLIB) $(MESGCLNTLIB) $(MESGCLNTD) $(LOGCLTRD) $(UCMLDSVD) $(TRCHNLD) $(UCMD) 

makeucm:
	make -C $(UCM_INFRA_DIR) PROD_DIR=$(PROD_DIR)
	make -C $(UCM_UTIL_DIR) PROD_DIR=$(PROD_DIR)
	make -C $(UCM_LXOS_DIR) PROD_DIR=$(PROD_DIR)

makemgmt:
	make -C $(UCM_MGMT_DIR) PROD_DIR=$(PROD_DIR)

makesys:
	make -w -C $(UCM_SYS_DIR)/infra  PROD_DIR=$(PROD_DIR)
	make -w -C $(UCM_SYS_DIR)/mgmteng  PROD_DIR=$(PROD_DIR)
	make -w -C $(UCM_SYS_DIR)/utils  PROD_DIR=$(PROD_DIR)
	make -w -C $(UCM_SYS_DIR)/lxos  PROD_DIR=$(PROD_DIR)
ifeq ("$(BUILD_MSGSYS)", "yes")
	make -w -C $(UCM_SYS_DIR)/msgsys  PROD_DIR=$(PROD_DIR)
endif

makeglenv:
	ln -s $(IGW_PATH)/basic_include $(UCMGL_PATH)/modules/basic_include
	ln -s $(IGW_PATH)/system/base/sysbasic_include $(UCMGL_PATH)/modules/sysbasic_include
	ln -s $(IGW_PATH)/system/base/templates $(UCMGL_PATH)/modules/templates
	ln -s $(UCM_PATH)/include $(UCMGL_PATH)/modules/include/ucm

makeaplcmp:
	make -w -C $(UCMGL_PATH)/modules/system/lxpc
	cp $(UCM_CBK_TARGET_DIR)/$(UCM_CBK_TARGET) $(UCM_CBK_LOCAL_DIR)

makedmtool:
	ant -f $(UCM_DM_TOOL_BIN_DIR)/build.xml -DPROD_DIR=$(PROD_DIR) -DGLU_PROD_DIR=$(GLU_PROD_DIR) -DCM_PROJECT_PATH_FORANT=$(UCM_PROJECT_PATH)

makemsgsys:
	make -C $(UCM_MSGSYS_DIR) PROD_DIR=$(PROD_DIR)

ifeq ("$(BUILD_MSGSYS)", "yes")
$(UCMD):$(JE_BASIC_OBJ) $(JE_USPACE_OBJ) $(DM_BASIC_OBJ) $(JE_SYS_OBJ)
	$(CC) $(LDFLAGS) $(IGWFLAGS) $(UCMLIBFLAGS) -lpthread $(UCMAPPLIB) $(DM_BASIC_OBJ)  $(UCMTRCHLLIB) $(JE_BASIC_OBJ) $(JE_USPACE_OBJ) $(JE_SYS_OBJ) $(MESGCLNT_LIB) $(LDOPSSLLIB) $(UCMUTILSCMNLIB) -rdynamic -lm -o $(UCMD) -ldl
else
$(UCMD):$(JE_BASIC_OBJ) $(JE_USPACE_OBJ) $(DM_BASIC_OBJ) $(JE_SYS_OBJ)
	$(CC) $(LDFLAGS) $(IGWFLAGS) $(UCMLIBFLAGS) -lpthread $(UCMAPPLIB) $(DM_BASIC_OBJ)  $(UCMTRCHLLIB) $(JE_BASIC_OBJ) $(JE_USPACE_OBJ) $(JE_SYS_OBJ) $(LDOPSSLLIB) $(UCMUTILSCMNLIB) -rdynamic -lm -o $(UCMD) -ldl
endif

$(TRCHNLD): $(TRCHNL_PORT_OBJ) 
	$(CC) $(LDFLAGS) -lpthread  $(MGMTLIBFLAGS) $(UCMLIBFLAGS) $(TRCHNL_PORT_OBJ) -lm -o	$(TRCHNLD) -ldl

$(CLI):$(CLI_BASIC_OBJ) $(CLI_PORT_OBJ)
	$(CC) $(LDFLAGS) $(DYNAMICFLAG) $(LDREADLINEFLAGS) -lpthread $(MGMTLIBFLAGS) $(UCMLIBFLAGS) $(LDAUTHLIB) $(CLI_BASIC_OBJ) $(CLI_PORT_OBJ) -lm -o $(CLI)

$(LOGCLTRLIB): $(LOGCLTR_UCM_OBJ)
	$(CC) $(LDFLAGS) $(LDLOGCLTRFLAGS) $(UCMLIBFLAGS) $(LOGCLTR_UCM_OBJ) -o $(LOGCLTRLIB)

$(LOGCLTRD): $(LOGCLTR_BASIC_OBJ) $(LOGCLTR_PORT_OBJ) $(LOGCLTR_SYS_OBJ)
	$(CC) $(LDFLAGS) $(LOGCLTR_BASIC_OBJ) $(LOGCLTR_PORT_OBJ) $(LOGCLTR_SYS_OBJ) $(LOGCLTRDYNLIB) -lm -o $(LOGCLTRD) -ldl

$(MESGCLNTLIB): $(MESGCLNTLIB_UCM_OBJ)
	$(CC) $(LDFLAGS) $(UCMLIBFLAGS) $(MESGCLNTLIB_UCM_OBJ) $(LDMESGCLNTFLAGS) -o $(MESGCLNTLIB)

$(MESGCLNTD): $(MESGCLNT_BASIC_OBJ) $(MESGCLNT_PORT_OBJ)  $(MESGCLNT_WRAP_OBJ) $(MESGCLNT_SYS_OBJ)
	$(CC) $(LDFLAGS) -lpthread  $(MESGCLNT_PORT_OBJ) $(MESGCLNT_BASIC_OBJ) $(MESGCLNT_WRAP_OBJ)  $(MESGCLNT_SYS_OBJ) $(MSGSYSDYNLIB) -lm -o $(MESGCLNTD)

$(HTTPD): $(HTTP_SYS_OBJ) $(HTTP_WRAP_OBJ) $(HTTP_USPACE_OBJ) $(HTTPS_BASIC_OBJ) $(HTTP_BASIC_OBJ) $(DM_BASIC_OBJ) 
	@echo "*********************************************************"
	@echo "*     Coping SSL libraries from " $(OPENSSL_DIR) "*"        
	@echo "*********************************************************"
	rm -rf $(MODSET_OBJ_DIR)/lib/$(IGW_LIBSSL_LINK) $(MODSET_OBJ_DIR)/lib/$(IGW_LIBCRYPTO_LINK)
	cp $(OPENSSL_DIR)/libssl.so.$(OPENSSL_VERSION) $(MODSET_OBJ_DIR)/lib/$(IGW_LIBSSL)
	cp $(OPENSSL_DIR)/libcrypto.so.$(OPENSSL_VERSION) $(MODSET_OBJ_DIR)/lib/$(IGW_LIBCRYPTO)
	ln -s $(MODSET_OBJ_DIR)/lib/$(IGW_LIBSSL) $(MODSET_OBJ_DIR)/lib/$(IGW_LIBSSL_LINK) 
	ln -s $(MODSET_OBJ_DIR)/lib/$(IGW_LIBCRYPTO) $(MODSET_OBJ_DIR)/lib/$(IGW_LIBCRYPTO_LINK)
	$(CC) $(LDFLAGS) $(DYNAMICFLAG) -lpthread $(UCMUTILSCMNLIB) $(UCMLIBFLAGS) $(UCMHTTPOPENSRC) $(MGMTLIBFLAGS) $(LDAUTHLIB) $(HTTP_WRAP_OBJ) $(HTTP_USPACE_OBJ) $(HTTP_SYS_OBJ) $(HTTPS_BASIC_OBJ) $(HTTP_BASIC_OBJ) $(DM_BASIC_OBJ) -lm -o $(HTTPD)

$(UCMLDSVD):$(LDSV_BASIC_OBJ) $(LDSV_USPACE_OBJ)
	$(CC) $(LDFLAGS) -lpthread $(MGMTLIBFLAGS) $(UCMLIBFLAGS) $(LDOPSSLLIB) $(UCMUTILSCMNLIB) $(LDSV_BASIC_OBJ) $(LDSV_USPACE_OBJ) -lm -o $(UCMLDSVD)

$(DRIVER): $(DRIVER_BASIC_OBJS)  
	$(LD) $(LDFLAGS) $(LDDRVFLAGS) $(DRIVER_BASIC_OBJS)  -o $(DRIVER)
ifeq ($(KERNEL_MAJOR_VERSION),2.6)
	$(MODPOST) -m -a -i $(KERNEL_SYMVERS) -I $(MODULE_SYMVERS) -o $(MODULE_SYMVERS) -w  $(DRIVER)
	$(CC) -c $(KMODLDFLAGS) $(KCFLAGS) -o  $(DRIVER_2_6_MOD_O) $(DRIVER_2_6_MOD_C)
	$(LD) $(LDDRVFLAGS) -o $(DRIVER_2_6) $(DRIVER) $(DRIVER_2_6_MOD_O)
endif


ifeq ("$(BUILD_MSGSYS)", "yes")
clean: cleanucm cleanmgmt cleanmsgsys cleansys cleanjedmn cleantr cleancli cleanldsvdmn cleanhttp  cleanmsgclntd cleanlogcltrd cleanlogcltrlib cleanmsgclntlib cleandriver 
else
clean: cleanucm cleanmgmt cleansys cleanjedmn cleantr cleancli cleanldsvdmn cleanhttp cleanlogcltrlib cleanmsgclntlib
endif

cleanjedmn:
	$(RM) $(UCMD)

cleantr:
	$(RM) $(TRCHNLD)

cleancli:
	$(RM) $(CLI)

cleanldsvdmn:
	$(RM) $(UCMLDSVD)

cleanhttp:
	$(RM) $(HTTPD)

cleanmsgclntd:
	make -C $(UCM_MSGSYS_DIR) PROD_DIR=$(PROD_DIR) clean
	make -C $(MESGCLNTSYS_DIR) PROD_DIR=$(PROD_DIR) clean
	$(RM) $(MESGCLNTD)

cleanlogcltrd:
	make -C $(LOGCLTRSYS_DIR) PROD_DIR=$(PROD_DIR) clean
	$(RM) $(LOGCLTRD)

cleanlogcltrlib:
	$(RM) $(LOGCLTRLIB)

cleanmsgclntlib:
	$(RM) $(MESGCLNTLIB)

cleanucm:
	make -C $(UCM_INFRA_DIR) PROD_DIR=$(PROD_DIR) clean
	make -C $(UCM_UTIL_DIR) PROD_DIR=$(PROD_DIR) clean
	make -C $(UCM_LXOS_DIR) PROD_DIR=$(PROD_DIR) clean

cleanmgmt:
	make -C $(UCM_MGMT_DIR) PROD_DIR=$(PROD_DIR) clean

cleanmsgsys:
	make -C $(UCM_MSGSYS_DIR) PROD_DIR=$(PROD_DIR) clean

cleansys:
	make -C $(UCM_SYS_DIR)/infra  PROD_DIR=$(PROD_DIR) clean
	make -C $(UCM_SYS_DIR)/utils  PROD_DIR=$(PROD_DIR) clean
	make -C $(UCM_SYS_DIR)/lxos  PROD_DIR=$(PROD_DIR) clean
	make -C $(UCM_SYS_DIR)/mgmteng  PROD_DIR=$(PROD_DIR) clean
	make -C $(UCM_SYS_DIR)/msgsys  PROD_DIR=$(PROD_DIR) clean

cleandmtool:
	ant -f $(UCM_DM_TOOL_BIN_DIR)/build.xml -DPROD_DIR=$(PROD_DIR) clean
	$(RM) $(UCM_GLUE_PATH)/modules/include/ucmgl/*.h

cleandriver:
	$(RM)	$(DRIVER)
ifeq ($(KERNEL_MAJOR_VERSION),2.6)
	  $(RM) $(DRIVER_2_6) $(DRIVER_2_6_MOD_C) $(DRIVER_2_6_MOD_O) ./Module.symvers
endif


.PHONY: http cleanhttp driver cleandriver

